<?php


/**
 * Skeleton subclass for performing query and update operations on the 'need' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.1 on:
 *
 * Sat Mar 20 18:17:12 2010
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class NeedPeer extends BaseNeedPeer {

    public static function convertDirectMessage(RawDm $dm, PropelPDO $con = null)
    {
        if (is_null($dm)) return null;
        
        $need = new Need();
        $need->setAuthor($dm->getFollower()->getSenderScreenName());

        $message = $dm->getText();

        // Strip need request
        $message = substr($message, 7);

        // Find location
        $within_location = strripos($message, 'within');
        $location = trim(substr($message, $within_location, strlen($message)));
        $message = trim(substr($message, 0, $within_location));

        // Find timeframe
        $time_location = strripos($message, 'in');
        $time = trim(substr($message, $time_location, strlen($message)));
        $message = trim(substr($message, 0, $time_location));

        $need->setDescription($message);
        $need->setTimeframe($time);
        $need->setLocation($location);
        $need->save();

        return $need;
    }

    public static function retrieveAllNeeds(PropelPDO $con = null)
    {
        return self::doSelect(new Criteria(), $con);
    }

    public static function retrieveLatestNeeds($limit = 10, PropelPDO $con = null)
    {
        $crit = new Criteria();
        $crit->addAscendingOrderByColumn(self::CREATED_AT);
        $crit->setLimit($limit);

        return self::doSelect($crit, $con);
    }

} // NeedPeer
